name: Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-checks:
    name: PR Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check for TODO/FIXME comments
        run: |
          if grep -r "TODO\|FIXME" src/ --exclude-dir=node_modules; then
            echo "Found TODO/FIXME comments. Please address them before merging."
            exit 1
          fi

      - name: Check for console.log statements
        run: |
          if grep -r "console\.log" src/ --exclude-dir=node_modules; then
            echo "Found console.log statements. Please remove them before merging."
            exit 1
          fi

      - name: Run linting
        run: npm run lint --if-present

      - name: Compile TypeScript
        run: npm run compile

      - name: Run tests
        run: npm test

      - name: Check test coverage
        run: npm run test:coverage --if-present

      - name: Build extension
        run: npx vsce package --no-dependencies

      - name: Comment PR with build info
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Get package.json info
            const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));

            // Check if build was successful
            const vsixFiles = fs.readdirSync('.').filter(f => f.endsWith('.vsix'));

            const comment = `## ðŸš€ PR Build Status

            âœ… **Build Successful**

            **Extension Info:**
            - Name: ${packageJson.displayName}
            - Version: ${packageJson.version}
            - Publisher: ${packageJson.publisher}

            **Build Artifacts:**
            ${vsixFiles.map(f => `- \`${f}\``).join('\n')}

            **Next Steps:**
            - Review the changes
            - Test the extension locally if needed
            - Merge when ready

            ---
            *This comment was automatically generated by the CI/CD pipeline.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
